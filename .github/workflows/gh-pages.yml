name: github pages

on:
  push:
    branches:
      - blade  # Set a branch to deploy

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# env:
#   RUSTFLAGS: --cfg=web_sys_unstable_apis
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Install Rust WASM toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Install wasm-bindgen-cli
        run: cargo install wasm-bindgen-cli

      - name: Build WebGPU
        run: cargo build --release --example bunnymark --target wasm32-unknown-unknown

      - name: Generate JS bindings for WebGPU examples
        run: wasm-bindgen --no-typescript --out-dir target/example_web --web target/wasm32-unknown-unknown/release/examples/bunnymark.wasm

      - name: Print Size 
        run: ls -la target/example_web/ 

      - name: Write html
        run: cat assets/wasm-resources/index.template.html | sed "s/{{example}}/bunnymark/g" > target/example_web/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./target/example_web


  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4