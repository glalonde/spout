name: github pages

on:
  push:
    branches:
      - blade  # Set a branch to deploy

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# env:
#   RUSTFLAGS: --cfg=web_sys_unstable_apis
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1
          lfs: true

      - uses: FedericoCarboni/setup-ffmpeg@v3
        id: setup-ffmpeg
        with:
          # A specific version to download, may also be "release" or a specific version
          # like "6.1.0". At the moment semver specifiers (i.e. >=6.1.0) are supported
          # only on Windows, on other platforms they are allowed but version is matched
          # exactly regardless.
          ffmpeg-version: release
          # Target architecture of the ffmpeg executable to install. Defaults to the
          # system architecture. Only x64 and arm64 are supported (arm64 only on Linux).
          architecture: ''
          # Linking type of the binaries. Use "shared" to download shared binaries and 
          # "static" for statically linked ones. Shared builds are currently only available
          # for windows releases. Defaults to "static"
          linking-type: static
          # As of version 3 of this action, builds are no longer downloaded from GitHub
          # except on Windows: https://github.com/GyanD/codexffmpeg/releases.
          github-token: ${{ github.server_url == 'https://github.com' && github.token || '' }}

      - name: Convert audio
        run: |
          cd assets/music
          rm -r output
          ./convert_music.sh
          ls -la output

      - name: Install Rust WASM toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Install wasm-bindgen-cli
        run: cargo install wasm-bindgen-cli

      - name: Build WebGPU
        run: cargo build --release --example bunnymark --target wasm32-unknown-unknown

      - name: Generate JS bindings for WebGPU examples
        run: wasm-bindgen --no-typescript --out-dir target/example_web --web target/wasm32-unknown-unknown/release/examples/bunnymark.wasm

      - name: Write html
        run: cat assets/wasm-resources/index.template.html | sed "s/{{example}}/bunnymark/g" > target/example_web/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./target/example_web


  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4