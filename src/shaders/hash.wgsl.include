// Hash without Sine
// MIT License...
// Copyright (c)2014 David Hoskins.
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.


//----------------------------------------------------------------------------------------
//  1 out, 1 in...
// float hash11(float p)
// {
//     p = fract(p * .1031);
//     p *= p + 33.33;
//     p *= p + p;
//     return fract(p);
// }
fn hash11(p: f32) -> f32 {
    var p0 = fract(p * 0.1031);
    p0 = p0 * (p0 + 33.33);
    p0 = p0 * (p0 + p0);
    return fract(p0);
}

//----------------------------------------------------------------------------------------
//  1 out, 2 in...
// float hash12(vec2 p)
// {
// 	vec3 p3  = fract(vec3(p.xyx) * .1031);
//     p3 += dot(p3, p3.yzx + 33.33);
//     return fract((p3.x + p3.y) * p3.z);
// } 
fn hash12(p: vec2<f32>) -> f32 {
    var p3 = fract(vec3<f32>(p.xyx) * 0.1031);
    let pdot = dot(p3, p3.yzx + 33.33);
    p3 = p3 + pdot;
    return fract((p3.x + p3.y) * p3.z);
}