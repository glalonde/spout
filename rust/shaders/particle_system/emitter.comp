#version 450 core
#include "particle.h"
layout(local_size_x = 512, local_size_y = 1, local_size_z = 1) in;
layout(std430, binding = 0) buffer Particles {
  Particle particles[];
};
layout(set = 0, binding = 1) uniform Params {
    uint start_index;
    uint num_emitted;
    ivec2 init_position;
    ivec2 init_velocity;
    float ttl;
    uint padding;
};

void main() {
  int gid = int(gl_GlobalInvocationID.x);
  int total_particles = int(gl_NumWorkGroups * gl_WorkGroupSize);

  // "progress" in terms of number of emitted particles.
  int distance = gid - int(start_index);
  if (distance < 0) {
    // Wrap over the circular buffer.
    distance += total_particles;
  }
  if (distance >= num_emitted) {
    return;
  }
  // particles[gid].ttl = ttl;
  particles[gid].position = init_position;
  particles[gid].velocity = init_velocity; 
}